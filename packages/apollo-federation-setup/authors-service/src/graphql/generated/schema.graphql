type Query {
  books: [Book]
  authors: [Author]
  author(
    """AuthorId"""
    authorId: Int!
  ): Author
}

"""A book"""
type Book {
  """id of the book"""
  bookId: ID!

  """title of book"""
  title: String

  """author of book"""
  author: Author

  """Id of the author who wrote book"""
  authorId: Int
}

"""The Author"""
type Author {
  """id of the author"""
  authorId: ID!

  """name of the author"""
  name: String

  """list of authors books"""
  books: [Book]
}

type Mutation {
  createBook(
    """Book input to be created"""
    input: CreateBookInput!
  ): Book
  createAuthor(
    """Author input to be created"""
    input: CreateAuthorInput!
  ): Author
}

"""Create book input"""
input CreateBookInput {
  """An arbitrary integer."""
  title: String!

  """An arbitrary integer."""
  authorId: Int!
}

"""Create book input"""
input CreateAuthorInput {
  """Authors name."""
  name: String!
}
