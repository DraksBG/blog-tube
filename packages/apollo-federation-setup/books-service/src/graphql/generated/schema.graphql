directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Query {
  _service: _Service!

  """Get all books query"""
  books: [Book]

  """Get all authors query"""
  authors: [Author]
}

type _Service {
  """
  The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied
  """
  sdl: String
}

"""A book"""
type Book {
  """id of the book"""
  bookId: ID!

  """title of book"""
  title: String

  """author of book"""
  author: Author

  """id of the author"""
  authorId: Int
}

"""A author"""
type Author {
  """id of the author"""
  authorId: ID!

  """authors username"""
  username: String

  """list of authors books"""
  books: [Book]
}

type Mutation {
  """Create book"""
  createBook(input: CreateBookInput): Book

  """create author"""
  createAuthor(input: CreateAuthorInput): Author
}

"""Create book input"""
input CreateBookInput {
  """The books title."""
  title: String!

  """The authors id."""
  authorId: Int!
}

"""Create author input"""
input CreateAuthorInput {
  """The authors username"""
  username: String!
}
